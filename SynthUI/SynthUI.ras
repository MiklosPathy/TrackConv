program SynthUI;

@use "SimpleCharFunctions"
@use "YM2151"
@use "X16Mouse"
@use "Input"
@use "Widget"
@use "Label"
@use "Slider"
@use "Button"

var
	const Vertical : byte = 0;
	const Horizontal : byte = 1;

	transpose:byte=3;
	
	tYM2151OpStat = record
		DT1,MUL,TL,KS,AR,AMSEN,D1R,DT2,D2R,D1L,RR:byte;
	end;
	
	tYM2151State = record
		R,L,FB,CON,PMS,AMS,LFRQ,PMDAMD,W:byte;
	end;		
	
	YM2151OpStats:array[4] of tYM2151OpStat;
	YM2151State:array[0] of tYM2151State;


procedure handlebuttonclick();
	var clickedButton:byte;
	begin
	clickedButton:=Widget::getMapValue(X16Mouse::mouseXchposAtClick,X16Mouse::mouseYchposAtClick);
	if ((clickedButton>>6)=0) then
		begin
		case clickedButton of
		0: dec(transpose);
		1: inc(transpose);
		end;
		end;

	end;

procedure handlesliderchange();
	begin
	//SCF::DrawBinByte(40,6,clickedSlider,5);
	
		case Slider::clickedSlider of
			0:	YM2151::SetFB(0,Slider::getValue(0));
			1:	YM2151::SetDT1(0,0,Slider::getValue(1));
			2:	YM2151::SetMUL(0,0,Slider::getValue(2));
			3:	YM2151::SetKS(0,0,Slider::getValue(3));
			4:	YM2151::SetAR(0,0,Slider::getValue(4));
			10:	YM2151::SetTL(0,0,Slider::getValue(10));
			end;

	end;

procedure handlemouse();
	begin
	X16Mouse::GetState();
	X16Mouse::CalcChPos();

//	X16Mouse::Xch:=(X16Mouse::X>>3);
//	X16Mouse::Ych:=(X16Mouse::Y>>3);
	
	SCF::DrawHexByte(75,56,X16Mouse::Buttons,1);
	SCF::DrawHexInt(70,57,X16Mouse::X,4);
	SCF::DrawHexInt(70,58,X16Mouse::Y,5);
	SCF::DrawHexByte(75,57,X16Mouse::Xch,4);
	SCF::DrawHexByte(75,58,X16Mouse::Ych,5);
	SCF::DrawHexByte(75,59, Widget::getMapValue(X16Mouse::Xch,X16Mouse::Ych),7);

	if (X16Mouse::Buttons=1) then 
		begin
		Slider::HandleClick();
		handlesliderchange();
		if X16Mouse::mouseClicked=0 then
			begin
			X16Mouse::mouseXchposAtClick:=X16Mouse::Xch;
			X16Mouse::mouseYchposAtClick:=X16Mouse::Ych;
			X16Mouse::mouseClicked:=1;
			end;
		end;
	if (X16Mouse::Buttons=0) then 
		begin
			if X16Mouse::mouseClicked=1 then
			begin
			handlebuttonclick();
			X16Mouse::mouseClicked:=0;
			Slider::clickedSlider:=$FF;
			end;
		end;
	end;

procedure createUI();
	begin
	SCF::TextAtPos(0,0,"YM2151 SYNTH UI",1);
	
	Button::Create(0,10,10,3,3,8,45);
	Button::Create(1,15,10,3,3,9,43);
	
	SCF::TextAtPos(10,18,"FEEDBACK",4);
	Label::Create(0,10,29,0,4);
	Slider::Create(0,10,20,8,4,0,7,Vertical,0);

	SCF::TextAtPos(0,40,"DT1",5);	
	Label::Create(1,6,40,0,5);
	Slider::Create(1,10,40,10,5,1,7,Horizontal,1);

	SCF::TextAtPos(0,42,"MUL",6);	
	Label::Create(2,6,42,0,6);
	Slider::Create(2,10,42,10,6,1,15,Horizontal,2);

	SCF::TextAtPos(0,44,"KS",7);	
	Label::Create(3,6,44,0,7);
	Slider::Create(3,10,44,10,7,0,3,Horizontal,3);

	SCF::TextAtPos(0,46,"AR",8);	
	Label::Create(4,6,46,0,8);
	Slider::Create(4,10,46,10,8,31,31,Horizontal,4);

	
	SCF::TextAtPos(40,8,"LEVEL",1);		
	Label::Create(10,40,50,0,1);
	Slider::Create(10,40,10,32,1,0,127,Vertical,10);

	end;


//MAIN START

begin
YM2151::Reset();
X16Mouse::CursorOn();

SCF::InitScreen(0);
Widget::ClearMap();
createUI();

//Widget::ShowWidgetMap();
//return();

YM2151::SetReg($20,%11000111);	//RLFFFCCC		    Right Left Feedback Connect
YM2151::SetReg($60,21);			//0TTTTTTT			Total level (reversed 0 max, 127 min)
YM2151::SetReg($80,31);			//KK0AAAAA			KS    		AR			(Key Scaling, Attack)
YM2151::SetReg($A0,0);			//A00DDDDD			AMS-EN      D1R			(Amplitude modulation, Decay1)
YM2151::SetReg($C0,0);			//TT0DDDDD			DT2    		D2R 		(Useless Detune, Decay2
YM2151::SetReg($E0,5);			//DDDDRRRR			D1L			RR			(Sustain, Release)

	
Input::key:=$0;	
while (Input::key<>3) do
	begin
	Input::getin();
	if (Input::key<>0) then 
		begin	
		if (Input::key=$20) then YM2151::KeyOff(0) //Keyoff simulation with space
		else
			begin
			SCF::DrawHexByte(75, 55, Input::key, 5);
			Input::key2note();
			if(Input::note<>$FF) then
				begin
				YM2151::SetNote(0,Input::octave+transpose,Input::note); //Transpose
				YM2151::KeyOn(0,$F);
				end;
			end;
		end;

	handlemouse();

	SCF::DrawHexByte(2,59,transpose,7);
	end;

X16Mouse::CursorOff();
YM2151::Reset();
return();
end.
 